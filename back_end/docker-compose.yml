services:
  auth:
    image: auth
    build: auth/
    container_name: auth
    ports:
      - "3000:3000"
    restart: always
    env_file:
      - .env
    networks:
      - transcendance-net

  database:
    image: database
    build: database/
    container_name: database
    restart: always
    env_file:
      - .env
    networks:
      - transcendance-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - transcendance-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3004:3000"
    networks:
      - transcendance-net
    volumes:
      - grafana-storage:/var/lib/grafana

  vault:
    build: ./vault
    container_name: vault
    volumes:
      - ${HOME}/vault:/vault
    networks:
      - transcendance-net
    environment:
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://0.0.0.0:8200
    command: vault server -dev
    healthcheck:
      test: ["CMD", "curl", "-s", "--fail", "http://localhost:8200/v1/sys/health"]
      interval: 5s
      timeout: 2s
      retries: 10
    ports:
      - "8200:8200"

  waf:
    build: ./modsecurity
    container_name: waf
    volumes:
      - ./modsecurity/modsecurity.conf:/etc/modsecurity/modsecurity.conf
      - ./modsecurity/nginx.conf:/usr/local/nginx/conf/nginx.conf
      - ./modsecurity/crs:/etc/modsecurity/crs
      - ./modsecurity/ssl:/etc/nginx/ssl
      - ${HOME}/vault:/vault
    ports:
      - "8443:443"
    depends_on:
      - auth
      - vault
    networks:
      - transcendance-net
    entrypoint: ./entrypoint.sh

volumes:
  grafana-storage: {}

networks:
  transcendance-net:
    name: transcendance-net
    driver: bridge