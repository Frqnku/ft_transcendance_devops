Include /etc/nginx/modsec/crs-setup.conf
Include /etc/nginx/modsec/cors-exclusions.conf
Include /etc/nginx/modsec/rules/*.conf

SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess Off

SecAction \
    "id:900000,\
    phase:1,\
    pass,\
    t:none,\
    nolog,\
    tag:'OWASP_CRS',\
    ver:'OWASP_CRS/4.4.0',\
    setvar:tx.blocking_paranoia_level=3"

SecAction \
    "id:900110,\
    phase:1,\
    pass,\
    t:none,\
    nolog,\
    tag:'OWASP_CRS',\
    ver:'OWASP_CRS/4.4.0',\
    setvar:tx.inbound_anomaly_score_threshold=10,\
    setvar:tx.outbound_anomaly_score_threshold=10"

SecRule ARGS "<script>" "id:12345,phase:2,deny,status:403,log,msg:'XSS test rule triggered'"
SecRule ARGS "@rx <[^>]+>" \
  "id:10002,phase:2,deny,status:403,log,msg:'Blocked any HTML tag'"
SecRule ARGS "@rx (?i)(union|select|insert|update|delete|drop|or[[:space:]]+1=1)" \
  "id:10003,phase:2,deny,status:403,log,msg:'SQL injection pattern detected'"

SecRequestBodyAccess On
SecRequestBodyLimit 13107200
SecRequestBodyLimitAction Reject

SecRule REQUEST_HEADERS:Content-Type "application/json" \
     "id:123456,\
     phase:1,\
     pass,\
     nolog,\
     ctl:requestBodyProcessor=JSON"

SecAuditEngine RelevantOnly
SecAuditLog /var/log/modsec_audit.log
SecAuditLogParts ABIJDEFHZ
SecDebugLog /var/log/modsec_debug.log
SecDebugLogLevel 3
